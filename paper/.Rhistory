setwd("pa")
getwd()
source('~/Git/FinalProject/paper/standalone_R_code.R')
MayorElection2$L.DummySex <- ifelse(MayorElection2$L.Geschlecht1 == "m", 0, 1)
# Find range of L.VoteShare1 in data
vs_range <- 20:97
# extract coefficients and variance-covariance matrix from model
fm_coef <- matrix(coef(model4))
fm_vcov <- vcov(model4)
# drawing simulations of the point estimates
drawn <- data.frame(mvrnorm(n = 1000, mu = fm_coef, Sigma = fm_vcov))
# matching simulations to all possible values in L.VoteShare1
draw_sim <- merge(drawn, vs_range)
draw_sim <- dplyr::rename(draw_sim, fitted.vs = y)
# Calculating predicted probabilites with the data at hand
MayorElection2$L.DummySex <- ifelse(MayorElection2$L.Geschlecht1 == "m", 0, 1)
# Find range of L.VoteShare1 in data
vs_range <- 20:97
# extract coefficients and variance-covariance matrix from model
fm_coef <- matrix(coef(model4))
model1 <- glm(Reelection~IncumbentSparkassenMember,
data = MayorElection2,
family = "binomial")
model2 <- glm(Reelection~IncumbentSparkassenMember +
L.VoteShareWinner,
data = MayorElection2,
family = "binomial")
model3 <- glm(Reelection~IncumbentSparkassenMember +
L.VoteShareWinner +
log(NumberEligVoter),
data = MayorElection2,
family = "binomial")
model4 <- glm(Reelection~IncumbentSparkassenMember +
L.VoteShareWinner +
log(NumberEligVoter) +
L.Geschlecht1,
data = MayorElection2,
family = "binomial")
covarnames <- c("Sparkassen board member", "Previous vote share", "Female", "Number eligible voters")
# Creating dummy from lagged sex variable
MayorElection2$L.DummySex <- ifelse(MayorElection2$L.Geschlecht1 == "m", 0, 1)
# Find range of L.VoteShare1 in data
vs_range <- 20:97
# extract coefficients and variance-covariance matrix from model
fm_coef <- matrix(coef(model4))
fm_vcov <- vcov(model4)
# drawing simulations of the point estimates
drawn <- data.frame(mvrnorm(n = 1000, mu = fm_coef, Sigma = fm_vcov))
# matching simulations to all possible values in L.VoteShare1
draw_sim <- merge(drawn, vs_range)
draw_sim <- dplyr::rename(draw_sim, fitted.vs = y)
View(draw_sim)
draw_sim$pred.prob <- 1 / (1 + exp(-(draw_sim[, 1] + draw_sim[, 2] * mean(MayorElection2$Reelection, na.rm = TRUE) + draw_sim[, 3] * draw_sim[, 6] + draw_sim[, 4] * mean(MayorElection2$L.DummySex) + draw_sim[, 5] * mean(log(MayorElection2$NumberEligVoter), na.rm = TRUE))))
```
draw_sim$pred.prob <- 1 / (1 + exp(-(draw_sim[, 1] + draw_sim[, 2] * mean(MayorElection2$Reelection, na.rm = TRUE) + draw_sim[, 3] * draw_sim[, 6] + draw_sim[, 4] * mean(MayorElection2$L.DummySex) + draw_sim[, 5] * mean(log(MayorElection2$NumberEligVoter), na.rm = TRUE))))
```
ggplot(draw_sim, aes(x = fitted.vs, y = pred.prob)) + geom_point(alpha = 0.1) +
stat_smooth(se = FALSE) + theme_bw() + ggtitle("Probability of reelection By Previous Vote Shares") +
ylab("Probability of reelection") + xlab("Vote Share in Previous Election")
length(SparkassenBoard$NameCandidate1) #8974 name-year combinations
View(SparkassenBoard)
SparkassenBoard <- subset(SparkassenBoard, year >= 2006)
table(MayorElection2$Geschlecht1)
